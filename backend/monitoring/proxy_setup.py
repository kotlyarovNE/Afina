#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ LLM –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import os
import requests
from typing import Optional


class ProxyManager:
    def __init__(self, proxy_host: str = "localhost", proxy_port: int = 8080):
        self.proxy_url = f"http://{proxy_host}:{proxy_port}"
        self.original_env = {}
        
    def enable_proxy(self):
        """–í–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö HTTP/HTTPS –∑–∞–ø—Ä–æ—Å–æ–≤"""
        print(f"üîó –í–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏: {self.proxy_url}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        self.original_env = {
            'HTTP_PROXY': os.environ.get('HTTP_PROXY'),
            'HTTPS_PROXY': os.environ.get('HTTPS_PROXY'),
            'http_proxy': os.environ.get('http_proxy'),
            'https_proxy': os.environ.get('https_proxy'),
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏
        os.environ['HTTP_PROXY'] = self.proxy_url
        os.environ['HTTPS_PROXY'] = self.proxy_url
        os.environ['http_proxy'] = self.proxy_url
        os.environ['https_proxy'] = self.proxy_url
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è requests
        self.setup_requests_proxy()
        
        print("‚úÖ –ü—Ä–æ–∫—Å–∏ –≤–∫–ª—é—á–µ–Ω")
        
    def disable_proxy(self):
        """–û—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        print("üîó –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏...")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        for key, value in self.original_env.items():
            if value is None:
                os.environ.pop(key, None)
            else:
                os.environ[key] = value
                
        print("‚úÖ –ü—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω")
    
    def setup_requests_proxy(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ requests"""
        # Monkey patch –¥–ª—è requests
        original_request = requests.Session.request
        
        def proxied_request(self, method, url, **kwargs):
            if 'proxies' not in kwargs:
                kwargs['proxies'] = {
                    'http': self.proxy_url,
                    'https': self.proxy_url
                }
            return original_request(self, method, url, **kwargs)
        
        requests.Session.request = proxied_request
    
    def test_proxy(self) -> bool:
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ–∫—Å–∏"""
        try:
            response = requests.get(
                "http://httpbin.org/ip", 
                proxies={'http': self.proxy_url, 'https': self.proxy_url},
                timeout=5
            )
            print(f"‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç. IP: {response.json().get('origin')}")
            return True
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            return False


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ–∫—Å–∏
proxy_manager = ProxyManager()


def enable_llm_monitoring():
    """–í–∫–ª—é—á–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ LLM –∑–∞–ø—Ä–æ—Å–æ–≤"""
    proxy_manager.enable_proxy()


def disable_llm_monitoring():
    """–û—Ç–∫–ª—é—á–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ LLM –∑–∞–ø—Ä–æ—Å–æ–≤"""
    proxy_manager.disable_proxy()


def test_monitoring_setup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    return proxy_manager.test_proxy()


if __name__ == "__main__":
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏...")
    
    # –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏
    enable_llm_monitoring()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    if test_monitoring_setup():
        print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–∞!")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø—Ä–æ–∫—Å–∏")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏
    disable_llm_monitoring()
