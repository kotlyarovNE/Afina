#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ MIT Proxy –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python start_proxy.py [start|stop|status]
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, str(Path(__file__).parent))

from monitoring.proxy_manager import get_manager
import argparse


def main():
    parser = argparse.ArgumentParser(description="MIT Proxy Manager –¥–ª—è Afina")
    parser.add_argument('action', nargs='?', default='start', 
                       choices=['start', 'stop', 'status'],
                       help='–î–µ–π—Å—Ç–≤–∏–µ: start, stop, status (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: start)')
    parser.add_argument('--web-port', type=int, default=8081,
                       help='–ü–æ—Ä—Ç –¥–ª—è web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8081)')
    parser.add_argument('--proxy-port', type=int, default=8080,
                       help='–ü–æ—Ä—Ç –¥–ª—è –ø—Ä–æ–∫—Å–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8080)')
    parser.add_argument('--no-browser', action='store_true',
                       help='–ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏')
    
    args = parser.parse_args()
    
    print("üîç MIT Proxy Manager –¥–ª—è Afina")
    print("================================")
    
    manager = get_manager()
    
    if args.action == 'start':
        print("üöÄ –ó–∞–ø—É—Å–∫ MIT Proxy...")
        success = manager.start(open_browser=not args.no_browser)
        if success:
            print("\n‚úÖ MIT Proxy –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üåê Web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:{manager.web_port}")
            print(f"üîó –ü—Ä–æ–∫—Å–∏: localhost:{manager.proxy_port}")
            print("\nüí° –¢–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏:")
            print(f"   HTTP_PROXY=http://localhost:{manager.proxy_port}")
            print(f"   HTTPS_PROXY=http://localhost:{manager.proxy_port}")
            print("\n‚ö†Ô∏è  –î–ª—è HTTPS –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ MIT.")
            print("   –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: https://docs.mitmproxy.org/stable/concepts-certificates/")
            
            try:
                print("\nüí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                while manager.is_running():
                    import time
                    time.sleep(1)
            except KeyboardInterrupt:
                print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MIT Proxy...")
                manager.stop()
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ MIT Proxy")
            sys.exit(1)
            
    elif args.action == 'stop':
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ MIT Proxy...")
        success = manager.stop()
        if success:
            print("‚úÖ MIT Proxy –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ MIT Proxy")
            sys.exit(1)
            
    elif args.action == 'status':
        status = manager.get_status()
        print(f"üìä –°—Ç–∞—Ç—É—Å: {'üü¢ –ó–∞–ø—É—â–µ–Ω' if status.is_running else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        if status.is_running:
            print(f"üÜî PID: {status.pid}")
            print(f"üåê Web UI: {status.web_url}")
            print(f"üîó Proxy: {status.proxy_url}")


if __name__ == "__main__":
    main()
