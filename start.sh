#!/bin/bash
set -euo pipefail

echo "üöÄ –ó–∞–ø—É—Å–∫ Afina Chat Application"
echo "================================="

# ---- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ----
PROXY_PORT=8080
WEB_PORT=8081
PROXY_URL="http://127.0.0.1:${PROXY_PORT}"
WEB_URL="http://127.0.0.1:${WEB_PORT}"
CERT_PATH="$HOME/.mitmproxy/mitmproxy-ca-cert.pem"

# –°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω (—Ç–≤–æ–π ¬´–ø–∞—Ä–æ–ª—å¬ª) –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –∑–∞–ø—É—Å–∫
MITM_TOKEN="$(python3 - <<'PY'
import secrets; print(secrets.token_urlsafe(32))
PY
)"
echo "üîë Mitmweb —Ç–æ–∫–µ–Ω: ${MITM_TOKEN}"

# ---- –ó–∞–ø—É—Å–∫ mitmweb –°–ù–ê–ß–ê–õ–ê ----
echo "üîß –°—Ç–∞—Ä—Ç—É–µ–º mitmweb..."
mitmweb \
--listen-host 127.0.0.1 --listen-port 8080 \
--web-host 127.0.0.1 --web-port 8081 \
--set web_open_browser=false \
--set stream_large_bodies=5m \
--set web_password="${MITM_TOKEN}" \
--set view_filter='~m "(?i)POST" & ~d "(api\.openai\.com|api\.anthropic\.com|generativelanguage\.googleapis\.com|api\.mistral\.ai|openrouter\.ai|api\.perplexity\.ai|api\.together\.xyz)"' \
> .mitmweb.log 2>&1 &

MITM_PID=$!

# –ù–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å —á—Ç–æ–±—ã –ø–æ—Ä—Ç –ø–æ–¥–Ω—è–ª—Å—è
sleep 2

if ! kill -0 "$MITM_PID" 2>/dev/null; then
  echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å mitmweb. –°–º–æ—Ç—Ä–∏ ./.mitmweb.log"
  exit 1
fi

# ---- –î–æ–≤–µ—Ä—è–µ–º CA mitmproxy (–æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –º–∞—à–∏–Ω–µ) ----
if [[ "$OSTYPE" == "darwin"* ]]; then
  # macOS: –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —É —Ç–µ–±—è –ø–æ—è–≤–∏—Ç—Å—è $CERT_PATH
  if [ -f "$CERT_PATH" ]; then
    echo "üîí –ï—Å–ª–∏ –Ω–µ –¥–µ–ª–∞–ª —ç—Ç–æ–≥–æ —Ä–∞–Ω—å—à–µ, –¥–æ–±–∞–≤—å CA –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ (—Ä–∞–∑–æ–≤–æ):"
    echo "sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain $CERT_PATH"
  fi
fi

# ---- –ü—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –î–û –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–∞/—Ñ—Ä–æ–Ω—Ç–∞ ----
export HTTP_PROXY="$PROXY_URL"
export HTTPS_PROXY="$PROXY_URL"
export ALL_PROXY="$PROXY_URL"
export NO_PROXY="localhost,127.0.0.1"

# Python/Requests/httpx/OpenAI –∫–ª–∏–µ–Ω—Ç (–∏—Å–ø–æ–ª—å–∑—É—é—Ç certifi) –±—É–¥–µ—Ç –¥–æ–≤–µ—Ä—è—Ç—å —ç—Ç–æ–º—É CA:
export REQUESTS_CA_BUNDLE="$CERT_PATH"
export SSL_CERT_FILE="$CERT_PATH"
export CURL_CA_BUNDLE="$CERT_PATH"

# Node.js (Next.js) –ø—É—Å—Ç—å —Ç–æ–∂–µ –¥–æ–≤–µ—Ä—è–µ—Ç:
export NODE_EXTRA_CA_CERTS="$CERT_PATH"

echo "üìç Mitmweb UI: ${WEB_URL}/?token=${MITM_TOKEN}"
echo "   (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization: Bearer ${MITM_TOKEN})"

# ---- (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –Ω–∞ macOS –¥–ª—è –í–°–ï–ì–û —Ç—Ä–∞—Ñ–∏–∫–∞ ----
# –í–∫–ª—é—á–∞–π, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ–∞–ª—å–Ω–æ —Ö–æ—á–µ—à—å –≤–µ—Å—å —Ç—Ä–∞—Ñ–∏–∫ —Å–∏—Å—Ç–µ–º—ã:
# networksetup -setwebproxy "Wi-Fi" 127.0.0.1 ${PROXY_PORT}
# networksetup -setsecurewebproxy "Wi-Fi" 127.0.0.1 ${PROXY_PORT}
# networksetup -setwebproxystate "Wi-Fi" on
# networksetup -setsecurewebproxystate "Wi-Fi" on

# ---- –î–∞–ª—å—à–µ —Å—Ç–∞—Ä—Ç—É–µ–º backend ----
echo "üîß –ó–∞–ø—É—Å–∫ Backend (FastAPI)..."
pushd backend >/dev/null
if [ ! -d "venv" ]; then python3 -m venv venv; fi
source venv/bin/activate

# (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) –ø—Ä–∏–≥–ª—É—à–∏—Ç—å bcrypt-—Å–ø–∞–º: –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Ä—Å–∏—é
# pip install 'bcrypt==4.0.1' 'passlib>=1.7.4' >/dev/null

pip install -r requirements.txt
python start.py &
BACKEND_PID=$!
popd >/dev/null

# ---- –ò frontend ----
echo "üé® –ó–∞–ø—É—Å–∫ Frontend (Next.js)..."
pushd frontend >/dev/null
if [ ! -d "node_modules" ]; then npm install; fi
npm run dev &
FRONTEND_PID=$!
popd >/dev/null

cleanup() {
  echo ""
  echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞..."
  [ -n "${FRONTEND_PID:-}" ] && kill "$FRONTEND_PID" 2>/dev/null || true
  [ -n "${BACKEND_PID:-}" ] && kill "$BACKEND_PID" 2>/dev/null || true
  [ -n "${MITM_PID:-}" ] && kill "$MITM_PID" 2>/dev/null || true

  # (–µ—Å–ª–∏ –≤–∫–ª—é—á–∞–ª —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–∫—Å–∏ ‚Äì –Ω–µ –∑–∞–±—É–¥—å –≤—ã–∫–ª—é—á–∏—Ç—å)
  # networksetup -setwebproxystate "Wi-Fi" off
  # networksetup -setsecurewebproxystate "Wi-Fi" off
  echo "üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!"
}
trap cleanup EXIT INT TERM

echo ""
echo "‚úÖ –í—Å—ë –ø–æ–¥–Ω—è–ª–æ—Å—å!"
echo "üìç Backend:  http://localhost:8000"
echo "üìç Frontend: http://localhost:3000"
echo "üìã Docs:     http://localhost:8000/docs"
echo "üß™ Mitmweb:  ${WEB_URL}/?token=${MITM_TOKEN}"
echo ""

# –î–µ—Ä–∂–∏–º —Å–∫—Ä–∏–ø—Ç –∂–∏–≤—ã–º
wait
